import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Modal, Animated, Easing, TouchableWithoutFeedback, Alert } from 'react-native';
import { auth } from '../Firebase';
import { SvgXml } from 'react-native-svg';

const svgString = `
<svg width="36" height="37" viewBox="0 0 36 37" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M30.5719 16.5987L28.125 14.1106V8.01316C28.125 7.06875 27.3656 6.29605 26.4375 6.29605H24.75C23.8219 6.29605 23.0625 7.06875 23.0625 8.01316V8.96272L19.6875 5.53194C19.2268 5.08893 18.8049 4.57895 18 4.57895C17.1951 4.57895 16.7732 5.08893 16.3125 5.53194L5.42813 16.5987C4.90163 17.1567 4.5 17.5637 4.5 18.3158C4.5 19.2825 5.229 20.0329 6.1875 20.0329H7.875V30.3355C7.875 31.2799 8.63437 32.0526 9.5625 32.0526H12.9375C13.8695 32.0526 14.625 31.2839 14.625 30.3355V23.4671C14.625 22.5227 15.3844 21.75 16.3125 21.75H19.6875C20.6156 21.75 21.375 22.5227 21.375 23.4671V30.3355C21.375 31.2839 21.2868 32.0526 22.2188 32.0526H26.4375C27.3656 32.0526 28.125 31.2799 28.125 30.3355V20.0329H29.8125C30.771 20.0329 31.5 19.2825 31.5 18.3158C31.5 17.5637 31.0984 17.1567 30.5719 16.5987Z" stroke="black" stroke-width="2" stroke-linejoin="round"/>
</svg>`;

const svgString1 = `
<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.875 11.5505C7.875 6.15323 12.4631 1.875 18 1.875C23.4119 1.875 27.9175 5.96232 28.118 11.1868L28.8347 11.4257C29.5294 11.6572 30.1383 11.8601 30.6213 12.0849C31.1435 12.3278 31.6221 12.6407 31.9879 13.1483C32.3538 13.6559 32.4993 14.2089 32.5647 14.7811C32.6251 15.3104 32.625 15.9522 32.625 16.6845V25.3068C32.625 26.2209 32.6251 27.0007 32.5541 27.6264C32.4795 28.2845 32.3127 28.9312 31.8606 29.483C31.601 29.7998 31.2859 30.0667 30.9307 30.2707C30.3122 30.6259 29.6468 30.6842 28.9854 30.6496C28.3566 30.6167 27.5873 30.4884 26.6856 30.3381L26.6233 30.3277C24.684 30.0045 23.9027 29.8824 23.1411 29.9461C22.8625 29.9694 22.5857 30.011 22.3125 30.0707C21.5661 30.2337 20.8483 30.5837 19.0741 31.4708C19.0124 31.5016 18.9514 31.5321 18.891 31.5623C16.8171 32.5997 15.5393 33.2388 14.1605 33.4385C13.7458 33.4985 13.3272 33.5283 12.9082 33.5275C11.515 33.5248 10.1699 33.0762 7.98803 32.3486C7.92492 32.3275 7.86111 32.3062 7.79657 32.2847L7.22123 32.0929L7.16525 32.0743C6.4706 31.8428 5.86174 31.6399 5.3787 31.4151C4.85649 31.1722 4.37792 30.8593 4.01206 30.3517C3.6462 29.8441 3.50068 29.2911 3.43535 28.7189C3.37492 28.1896 3.37496 27.5478 3.375 26.8155L3.375 19.2859C3.37496 18.1067 3.37492 17.1127 3.47594 16.3342C3.58138 15.5216 3.81978 14.7272 4.47394 14.1297C4.66623 13.9541 4.8782 13.8013 5.10563 13.6744C5.87929 13.2427 6.7084 13.2678 7.51261 13.4247C7.67576 13.4566 7.84664 13.4958 8.02528 13.5413C7.92617 12.8726 7.875 12.2058 7.875 11.5505ZM8.62304 16.0639C7.98108 15.8569 7.48837 15.7124 7.0817 15.6331C6.48898 15.5174 6.29468 15.5875 6.20188 15.6393C6.12607 15.6816 6.05541 15.7325 5.99131 15.791C5.91285 15.8627 5.78494 16.0249 5.70723 16.6238C5.62726 17.24 5.625 18.0862 5.625 19.362V26.7566C5.625 27.5652 5.6267 28.0772 5.67083 28.4637C5.71168 28.8214 5.77851 28.9544 5.83736 29.0361C5.8962 29.1177 6.00125 29.2232 6.32774 29.3751C6.68046 29.5392 7.16563 29.7027 7.93274 29.9584L8.50808 30.1502C10.9434 30.962 11.9263 31.2756 12.9125 31.2775C13.2222 31.2781 13.5315 31.2561 13.838 31.2117C14.8137 31.0704 15.7514 30.6165 18.0678 29.4583C18.1147 29.4348 18.1611 29.4116 18.207 29.3887C19.798 28.593 20.7781 28.1028 21.8325 27.8725C22.202 27.7918 22.5765 27.7355 22.9535 27.7039C24.0289 27.6139 25.1016 27.7929 26.8418 28.0831C26.8917 28.0914 26.9421 28.0998 26.9932 28.1083C27.9745 28.2719 28.6168 28.3772 29.1029 28.4026C29.5708 28.4271 29.7315 28.3647 29.8102 28.3196C29.9286 28.2516 30.0337 28.1626 30.1202 28.057C30.1777 27.9868 30.2657 27.8384 30.3185 27.3729C30.3733 26.8892 30.375 26.2384 30.375 25.2435V16.7434C30.375 15.9348 30.3733 15.4228 30.3292 15.0363C30.2883 14.6786 30.2215 14.5456 30.1627 14.4639C30.1038 14.3823 29.9988 14.2768 29.6723 14.1249C29.3195 13.9608 28.8344 13.7973 28.0673 13.5416L27.979 13.5122C27.6937 15.4643 26.9994 17.435 25.9759 19.1939C24.6072 21.5461 22.6046 23.5948 20.0956 24.6893C18.764 25.2702 17.236 25.2702 15.9044 24.6893C13.3954 23.5948 11.3928 21.5461 10.0241 19.1939C9.44807 18.204 8.9763 17.147 8.62304 16.0639ZM18 4.125C13.5957 4.125 10.125 7.50311 10.125 11.5505C10.125 13.6766 10.7812 16.0213 11.9688 18.0623C13.1568 20.1039 14.8313 21.7664 16.804 22.627C17.562 22.9577 18.438 22.9577 19.196 22.627C21.1687 21.7664 22.8432 20.1039 24.0312 18.0623C25.2188 16.0213 25.875 13.6766 25.875 11.5505C25.875 7.50311 22.4043 4.125 18 4.125ZM18 10.125C16.9645 10.125 16.125 10.9645 16.125 12C16.125 13.0355 16.9645 13.875 18 13.875C19.0355 13.875 19.875 13.0355 19.875 12C19.875 10.9645 19.0355 10.125 18 10.125ZM13.875 12C13.875 9.72183 15.7218 7.875 18 7.875C20.2782 7.875 22.125 9.72183 22.125 12C22.125 14.2782 20.2782 16.125 18 16.125C15.7218 16.125 13.875 14.2782 13.875 12Z" fill="black"/>
</svg>`;

const svgString2 = `
<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M13.4835 7.96167C15.2534 4.35817 18.9605 1.875 23.25 1.875C29.2561 1.875 34.125 6.7439 34.125 12.75C34.125 14.3581 33.7752 15.8876 33.1465 17.264C32.9824 17.6232 32.9505 17.9625 33.0234 18.2351L33.2145 18.9492C33.8261 21.2349 31.7349 23.3261 29.4492 22.7145L28.7351 22.5234C28.5322 22.4692 28.2924 22.473 28.0349 22.5461C27.2698 29.0662 21.7257 34.125 15 34.125C12.975 34.125 11.0542 33.6656 9.33885 32.8444C8.99926 32.6818 8.6649 32.6488 8.38986 32.7224L6.5508 33.2145C4.26505 33.8261 2.17391 31.7349 2.78549 29.4492L3.27756 27.6101C3.35115 27.3351 3.31817 27.0007 3.15559 26.6612C2.33435 24.9458 1.875 23.025 1.875 21C1.875 14.2642 6.9491 8.71346 13.4835 7.96167ZM16.1025 7.92065C22.5897 8.46017 27.7371 13.7177 28.1041 20.2524C28.4978 20.2149 28.9071 20.2403 29.3167 20.3499L30.0308 20.541C30.644 20.705 31.205 20.144 31.041 19.5308L30.8499 18.8167C30.6142 17.9357 30.7678 17.0562 31.0999 16.3292C31.5973 15.2403 31.875 14.0291 31.875 12.75C31.875 7.98654 28.0135 4.125 23.25 4.125C20.2771 4.125 17.6538 5.62925 16.1025 7.92065ZM15 10.125C8.9939 10.125 4.125 14.9939 4.125 21C4.125 22.6816 4.50587 24.271 5.18501 25.6896C5.53811 26.4271 5.68618 27.3131 5.4511 28.1917L4.95904 30.0308C4.79495 30.644 5.35599 31.205 5.96924 31.041L7.8083 30.5489C8.68689 30.3138 9.57286 30.4619 10.3104 30.815C11.729 31.4941 13.3184 31.875 15 31.875C21.0061 31.875 25.875 27.0061 25.875 21C25.875 14.9939 21.0061 10.125 15 10.125Z" fill="black"/>
<path d="M11.25 21C11.25 21.8284 10.5784 22.5 9.75 22.5C8.92157 22.5 8.25 21.8284 8.25 21C8.25 20.1716 8.92157 19.5 9.75 19.5C10.5784 19.5 11.25 20.1716 11.25 21Z" fill="black"/>
<path d="M16.5 21C16.5 21.8284 15.8284 22.5 15 22.5C14.1716 22.5 13.5 21.8284 13.5 21C13.5 20.1716 14.1716 19.5 15 19.5C15.8284 19.5 16.5 20.1716 16.5 21Z" fill="black"/>
<path d="M21.75 21C21.75 21.8284 21.0784 22.5 20.25 22.5C19.4216 22.5 18.75 21.8284 18.75 21C18.75 20.1716 19.4216 19.5 20.25 19.5C21.0784 19.5 21.75 20.1716 21.75 21Z" fill="black"/>
</svg>`;

const svgString3 = `
<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M31.125 10.5C31.125 11.1213 30.6213 11.625 30 11.625L6 11.625C5.37868 11.625 4.875 11.1213 4.875 10.5C4.875 9.87868 5.37868 9.375 6 9.375L30 9.375C30.6213 9.375 31.125 9.87868 31.125 10.5Z" fill="#1C274C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M31.125 18C31.125 18.6213 30.6213 19.125 30 19.125L6 19.125C5.37868 19.125 4.875 18.6213 4.875 18C4.875 17.3787 5.37868 16.875 6 16.875L30 16.875C30.6213 16.875 31.125 17.3787 31.125 18Z" fill="#1C274C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M31.125 25.5C31.125 26.1213 30.6213 26.625 30 26.625L6 26.625C5.37868 26.625 4.875 26.1213 4.875 25.5C4.875 24.8787 5.37868 24.375 6 24.375L30 24.375C30.6213 24.375 31.125 24.8787 31.125 25.5Z" fill="#1C274C"/>
</svg>`;

const svgString4 = `
<svg width="60" height="56" viewBox="0 0 60 56" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0 10C0 4.47715 4.47715 0 10 0H50C55.5228 0 60 4.47715 60 10V46C60 51.5229 55.5228 56 50 56H10C4.47715 56 0 51.5228 0 46V10Z" fill="#E7BC91"/>
<path d="M36.923 17.2727C36.923 16.1682 37.8184 15.2727 38.923 15.2727H51.0768C52.1814 15.2727 53.0768 16.1682 53.0768 17.2727V18.3636C53.0768 19.4682 52.1814 20.3636 51.0768 20.3636H38.923C37.8184 20.3636 36.923 19.4682 36.923 18.3636V17.2727Z" fill="white"/>
<path d="M36.923 27.4545C36.923 26.35 37.8184 25.4545 38.923 25.4545H51.0768C52.1814 25.4545 53.0768 26.35 53.0768 27.4545V28.5454C53.0768 29.65 52.1814 30.5454 51.0768 30.5454H38.923C37.8184 30.5454 36.923 29.65 36.923 28.5454V27.4545Z" fill="white"/>
<path d="M36.923 37.6364C36.923 36.5318 37.8184 35.6364 38.923 35.6364H51.0768C52.1814 35.6364 53.0768 36.5318 53.0768 37.6364V38.7273C53.0768 39.8318 52.1814 40.7273 51.0768 40.7273H38.923C37.8184 40.7273 36.923 39.8318 36.923 38.7273V37.6364Z" fill="white"/>
<path d="M32.8845 25.6136C32.8845 26.2744 32.7069 26.9203 32.3741 27.4697C32.0412 28.0192 31.5682 28.4474 31.0148 28.7002C30.4613 28.9531 29.8523 29.0193 29.2648 28.8903C28.6772 28.7614 28.1375 28.4432 27.7139 27.976C27.2904 27.5088 27.0019 26.9135 26.885 26.2654C26.7682 25.6173 26.8281 24.9456 27.0574 24.3351C27.2866 23.7247 27.6748 23.2029 28.1729 22.8358C28.671 22.4687 29.2566 22.2727 29.8557 22.2727C30.659 22.2727 31.4294 22.6247 31.9974 23.2513C32.5654 23.8778 32.8845 24.7276 32.8845 25.6136ZM14.7114 25.6136C14.7114 24.9529 14.5338 24.3069 14.201 23.7575C13.8682 23.2081 13.3951 22.7799 12.8417 22.527C12.2882 22.2742 11.6792 22.208 11.0917 22.3369C10.5042 22.4658 9.96446 22.784 9.54087 23.2513C9.11728 23.7185 8.82881 24.3138 8.71194 24.9619C8.59507 25.6099 8.65505 26.2817 8.8843 26.8921C9.11355 27.5026 9.50176 28.0244 9.99985 28.3915C10.4979 28.7586 11.0835 28.9545 11.6826 28.9545C12.4859 28.9545 13.2563 28.6026 13.8243 27.976C14.3923 27.3495 14.7114 26.4997 14.7114 25.6136ZM16.8749 23.2273C17.4739 23.2273 18.0595 23.0313 18.5576 22.6642C19.0557 22.2971 19.4439 21.7753 19.6732 21.1649C19.9024 20.5544 19.9624 19.8827 19.8455 19.2346C19.7287 18.5865 19.4402 17.9912 19.0166 17.524C18.593 17.0567 18.0533 16.7386 17.4658 16.6096C16.8783 16.4807 16.2693 16.5469 15.7158 16.7998C15.1624 17.0526 14.6893 17.4808 14.3565 18.0303C14.0237 18.5797 13.8461 19.2256 13.8461 19.8864C13.8461 20.7724 14.1652 21.6222 14.7332 22.2487C15.3012 22.8753 16.0716 23.2273 16.8749 23.2273ZM24.6634 23.2273C25.2624 23.2273 25.848 23.0313 26.3461 22.6642C26.8442 22.2971 27.2324 21.7753 27.4616 21.1649C27.6909 20.5544 27.7509 19.8827 27.634 19.2346C27.5171 18.5865 27.2287 17.9912 26.8051 17.524C26.3815 17.0567 25.8418 16.7386 25.2543 16.6096C24.6667 16.4807 24.0577 16.5469 23.5043 16.7998C22.9508 17.0526 22.4778 17.4808 22.145 18.0303C21.8122 18.5797 21.6345 19.2256 21.6345 19.8864C21.6345 20.7724 21.9536 21.6222 22.5216 22.2487C23.0897 22.8753 23.8601 23.2273 24.6634 23.2273ZM27.1643 30.489C26.7248 30.2215 26.3373 29.861 26.0242 29.4282C25.7111 28.9954 25.4784 28.4987 25.3394 27.9666C25.0517 26.8751 24.4506 25.9161 23.6264 25.2338C22.8023 24.5514 21.7996 24.1825 20.7691 24.1825C19.7386 24.1825 18.736 24.5514 17.9118 25.2338C17.0877 25.9161 16.4866 26.8751 16.1988 27.9666C15.9209 29.0373 15.2693 29.9427 14.3869 30.4842C13.5405 30.9894 12.8709 31.7914 12.4841 32.7635C12.0972 33.7355 12.0153 34.822 12.2511 35.8512C12.4869 36.8804 13.027 37.7936 13.7861 38.4462C14.5452 39.0988 15.4798 39.4536 16.4422 39.4545C17.0189 39.4564 17.59 39.3293 18.121 39.0811C19.814 38.3109 21.7145 38.3109 23.4075 39.0811C24.4329 39.573 25.5912 39.608 26.6394 39.1786C27.6877 38.7492 28.5446 37.8889 29.0304 36.7779C29.5162 35.667 29.5933 34.3917 29.2454 33.2195C28.8975 32.0473 28.1517 31.0692 27.1643 30.4902V30.489Z" fill="white"/>
</svg>`;

const svgString5 = `
<svg width="50" height="50" viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_iiii_610_158)">
<path d="M47.325 9.04999C46.0797 8.04363 44.5261 7.49633 42.925 7.49999H7.07497C3.17325 7.5137 0.0136853 10.6733 -2.91383e-05 14.575V16.25C-0.00931675 19.6861 2.01034 22.8038 5.14997 24.2C6.27535 24.7316 7.50535 25.005 8.74997 25H11.25C13.6086 25.0111 15.8682 24.053 17.5 22.35C19.1318 24.053 21.3914 25.0111 23.75 25H26.25C28.6085 25.0111 30.8682 24.053 32.5 22.35C34.1318 24.053 36.3914 25.0111 38.75 25H41.25C42.4946 25.005 43.7246 24.7316 44.85 24.2C47.9896 22.8038 50.0093 19.6861 50 16.25V14.575C49.999 12.4214 49.0137 10.3864 47.325 9.04999Z" fill="#FF7070"/>
</g>
<g filter="url(#filter1_iiii_610_158)">
<path d="M38.75 27.5C36.5221 27.5157 34.3422 26.853 32.5 25.6C30.6578 26.853 28.4779 27.5157 26.25 27.5H23.75C21.5221 27.5157 19.3422 26.853 17.5 25.6C15.6578 26.853 13.4779 27.5157 11.25 27.5H8.75C7.46949 27.5033 6.19897 27.2746 5 26.825V42.5C5 46.6421 8.35786 50 12.5 50H17.5V37.5C17.5 33.3579 20.8579 30 25 30C29.1421 30 32.5 33.3579 32.5 37.5V50H37.5C41.6421 50 45 46.6421 45 42.5V26.825C43.8029 27.2813 42.5311 27.5102 41.25 27.5H38.75Z" fill="#8EE3FF"/>
</g>
<g filter="url(#filter2_iiii_610_158)">
<path d="M42.925 5C44.0253 5.00194 45.1168 5.19655 46.15 5.575L46 5.125C44.937 2.11836 42.089 0.112702 38.9 0.124995H11.1C7.91099 0.112702 5.06295 2.11836 3.99998 5.125L3.84998 5.575C4.88317 5.19655 5.97465 5.00194 7.07498 5H42.925Z" fill="#FF7070"/>
</g>
</svg>`;

const svgString7 = `
<svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_iiii_294_720)">
<path d="M5.86484 28.1252C5.31146 26.4666 5 24.8005 5 23.1511C5 8.37374 18.7504 1.65659 30 13.7469C41.2496 1.65659 55 8.37328 55 23.151C55 24.8004 54.6885 26.4666 54.1352 28.1252H46.5902L46.3103 28.1249C44.9459 28.1227 43.7343 28.1207 42.6316 28.6118C41.529 29.1029 40.7197 30.005 39.8083 31.021L39.6212 31.2294L37.048 34.0884C36.8564 34.3014 36.6999 34.4751 36.5619 34.6233C36.4306 34.4696 36.2821 34.2897 36.1002 34.0693L27.2222 23.308C26.8733 22.8848 26.5001 22.432 26.1349 22.096C25.7097 21.7047 25.0812 21.2645 24.2024 21.2117C23.3236 21.159 22.6469 21.5207 22.1779 21.8583C21.7751 22.1482 21.3504 22.5531 20.9534 22.9314L17.1293 26.5735C15.9499 27.6967 15.7038 27.8881 15.4464 27.9911C15.1889 28.0941 14.8787 28.1252 13.25 28.1252H5.86484Z" fill="#FF8080"/>
<path d="M7.51102 31.8752C10.9635 38.28 17.3257 44.2854 22.4043 48.4268C25.7343 51.1423 27.3993 52.5 30 52.5C32.6007 52.5 34.2657 51.1423 37.5957 48.4268C42.6743 44.2855 49.0366 38.28 52.489 31.8752H46.5902C44.7797 31.8752 44.4365 31.9131 44.1573 32.0374C43.8781 32.1617 43.6202 32.3917 42.4085 33.738L39.7715 36.668C39.3767 37.1071 38.9596 37.5708 38.5588 37.9069C38.0959 38.295 37.4069 38.7302 36.474 38.7102C35.5414 38.6901 34.8719 38.2261 34.426 37.8184C34.0401 37.4656 33.6436 36.9846 33.2684 36.5295L24.3872 25.7643C24.2184 25.5597 24.081 25.3933 23.9598 25.2513C23.8224 25.3778 23.6661 25.5265 23.474 25.7095L19.5337 29.4625C18.6437 30.3126 17.8541 31.0669 16.8391 31.4729C15.824 31.8789 14.7321 31.8773 13.5013 31.8755L7.51102 31.8752Z" fill="#FF8080"/>
</g>
</svg>`;

const svgString8 = `
<svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0 20C0 8.9543 8.95431 0 20 0H40C51.0457 0 60 8.95431 60 20V40C60 51.0457 51.0457 60 40 60H20C8.9543 60 0 51.0457 0 40V20Z" fill="white"/>
<path d="M53.6645 35.3742C53.7615 35.8164 53.7158 36.2794 53.5332 36.7047C53.3507 37.13 53.0395 37.4985 52.6391 37.7637C52.2386 38.0288 51.7669 38.1786 51.2835 38.1941C50.8001 38.2097 50.3268 38.0903 49.9233 37.851C49.5199 37.6118 49.2046 37.2634 49.0171 36.85C48.8297 36.4366 48.7786 35.9767 48.8703 35.5285C48.962 35.0802 49.1923 34.6638 49.5323 34.3319C49.8722 33.9999 50.3064 33.7673 50.78 33.6635C51.4151 33.5243 52.0758 33.6263 52.6167 33.9472C53.1577 34.268 53.5346 34.7813 53.6645 35.3742ZM39.2974 38.5234C39.2005 38.0812 38.9653 37.6798 38.6216 37.3698C38.2779 37.0598 37.8412 36.8553 37.3665 36.782C36.8919 36.7087 36.4007 36.7699 35.9552 36.958C35.5096 37.1461 35.1296 37.4525 34.8632 37.8386C34.5969 38.2246 34.4561 38.673 34.4588 39.1269C34.4615 39.5808 34.6074 40.0199 34.8782 40.3887C35.149 40.7575 35.5324 41.0393 35.98 41.1987C36.4276 41.358 36.9193 41.3876 37.3929 41.2838C38.028 41.1446 38.5854 40.7756 38.9426 40.2579C39.2998 39.7402 39.4274 39.1163 39.2974 38.5234ZM40.6578 36.5516C41.1314 36.4478 41.5656 36.2152 41.9055 35.8833C42.2455 35.5513 42.4758 35.1349 42.5675 34.6867C42.6592 34.2384 42.6081 33.7785 42.4207 33.3651C42.2332 32.9517 41.9179 32.6033 41.5144 32.3641C41.111 32.1248 40.6377 32.0054 40.1543 32.021C39.6709 32.0365 39.1991 32.1864 38.7987 32.4515C38.3982 32.7166 38.0871 33.0851 37.9045 33.5104C37.722 33.9357 37.6763 34.3987 37.7732 34.8409C37.9032 35.4338 38.2801 35.9471 38.8211 36.268C39.362 36.5888 40.0227 36.6908 40.6578 36.5516ZM46.8151 35.202C47.2887 35.0982 47.7229 34.8656 48.0629 34.5336C48.4028 34.2017 48.6332 33.7852 48.7249 33.337C48.8166 32.8888 48.7655 32.4289 48.578 32.0155C48.3906 31.6021 48.0752 31.2537 47.6718 31.0145C47.2684 30.7752 46.795 30.6558 46.3116 30.6714C45.8282 30.6869 45.3565 30.8367 44.956 31.1018C44.5556 31.3669 44.2444 31.7355 44.0619 32.1608C43.8794 32.5861 43.8337 33.0491 43.9306 33.4913C44.0605 34.0842 44.4375 34.5975 44.9784 34.9183C45.5194 35.2392 46.1801 35.3412 46.8151 35.202ZM49.8574 39.6278C49.4707 39.525 49.1115 39.351 48.8005 39.1156C48.4894 38.8802 48.2326 38.5882 48.0447 38.2562C47.6572 37.5757 47.0413 37.0381 46.2897 36.7243C45.538 36.4105 44.6912 36.3374 43.8766 36.516C43.0619 36.6946 42.3233 37.1152 41.7718 37.7146C41.2204 38.314 40.8858 39.0599 40.8184 39.8401C40.7557 40.6048 40.3734 41.3236 39.7553 41.8388C39.1602 42.3235 38.7485 42.9763 38.5852 43.6937C38.422 44.4112 38.5165 45.1525 38.8539 45.8003C39.1913 46.4482 39.7523 46.9656 40.4481 47.2707C41.1439 47.5759 41.9348 47.6514 42.6958 47.4852C43.152 47.3865 43.5849 47.2025 43.9683 46.9444C45.1938 46.1357 46.6962 45.8064 48.1476 46.0283C49.0304 46.1798 49.9512 46.0025 50.717 45.5335C51.4828 45.0645 52.034 44.3404 52.2551 43.5128C52.4762 42.6852 52.3501 41.8185 51.9031 41.0944C51.4562 40.3703 50.7229 39.8442 49.8574 39.6278Z" fill="#FF7096"/>
<path d="M25.766 47.2677C25.6597 47.7077 25.4159 48.1041 25.0657 48.4066C24.7154 48.7091 24.2744 48.9043 23.7983 48.9674C23.3222 49.0306 22.8325 48.9588 22.391 48.7612C21.9496 48.5637 21.5762 48.2491 21.3182 47.8575C21.0602 47.4658 20.9291 47.0146 20.9414 46.5608C20.9538 46.1071 21.1091 45.6712 21.3877 45.3083C21.6663 44.9454 22.0557 44.6718 22.5067 44.5221C22.9576 44.3723 23.4498 44.3532 23.9211 44.4672C24.553 44.6199 25.1024 45.0008 25.4484 45.526C25.7944 46.0512 25.9087 46.6778 25.766 47.2677ZM11.4696 43.8117C11.576 43.3717 11.5402 42.9079 11.3668 42.4787C11.1935 42.0496 10.8902 41.6745 10.4956 41.4009C10.1009 41.1273 9.63244 40.9674 9.14949 40.9415C8.66653 40.9156 8.19075 41.0248 7.78231 41.2554C7.37387 41.486 7.05111 41.8275 6.85486 42.2368C6.6586 42.6461 6.59766 43.1048 6.67974 43.5549C6.76181 44.005 6.98323 44.4262 7.31597 44.7654C7.64872 45.1046 8.07786 45.3464 8.54912 45.4603C9.18106 45.6131 9.84377 45.5252 10.3915 45.216C10.9392 44.9069 11.327 44.4017 11.4696 43.8117ZM13.5557 42.6342C14.027 42.7481 14.5192 42.729 14.9701 42.5793C15.421 42.4295 15.8104 42.1559 16.089 41.793C16.3676 41.4302 16.523 40.9943 16.5353 40.5405C16.5477 40.0868 16.4166 39.6355 16.1586 39.2438C15.9006 38.8522 15.5272 38.5377 15.0858 38.3401C14.6443 38.1425 14.1546 38.0708 13.6785 38.1339C13.2024 38.197 12.7613 38.3922 12.4111 38.6947C12.0608 38.9973 11.8171 39.3936 11.7107 39.8336C11.5681 40.4236 11.6824 41.0501 12.0284 41.5753C12.3744 42.1005 12.9238 42.4814 13.5557 42.6342ZM19.6827 44.1153C20.154 44.2292 20.6462 44.2101 21.0971 44.0604C21.5481 43.9107 21.9375 43.6371 22.2161 43.2742C22.4947 42.9113 22.65 42.4754 22.6624 42.0217C22.6748 41.5679 22.5436 41.1167 22.2856 40.725C22.0276 40.3333 21.6543 40.0188 21.2128 39.8212C20.7713 39.6237 20.2816 39.5519 19.8055 39.615C19.3294 39.6782 18.8884 39.8733 18.5381 40.1759C18.1879 40.4784 17.9441 40.8747 17.8378 41.3147C17.6951 41.9047 17.8094 42.5312 18.1554 43.0565C18.5014 43.5817 19.0508 43.9626 19.6827 44.1153ZM20.4813 49.4262C20.1786 49.1645 19.9318 48.8508 19.7551 48.5031C19.5785 48.1553 19.4754 47.7804 19.4517 47.3996C19.4011 46.6181 19.0825 45.8653 18.544 45.2542C18.0055 44.6431 17.2761 44.2068 16.4655 44.0108C15.6548 43.8148 14.8066 43.8698 14.0484 44.1674C13.2903 44.4651 12.663 44.9893 12.261 45.6613C11.87 46.3214 11.2116 46.8004 10.4303 46.9932C9.68314 47.1686 9.02729 47.5753 8.56652 48.149C8.10574 48.7226 7.86635 49.4305 7.88619 50.1607C7.90603 50.8909 8.18398 51.6016 8.67607 52.1805C9.16816 52.7594 9.84631 53.1734 10.6033 53.357C11.0567 53.4679 11.5264 53.492 11.9841 53.4276C13.4399 53.2368 14.935 53.5982 16.1428 54.433C16.8703 54.9555 17.7759 55.1991 18.6697 55.1125C19.5634 55.026 20.376 54.6161 20.937 53.9687C21.498 53.3214 21.7639 52.4869 21.6789 51.6402C21.5939 50.7935 21.1648 49.9995 20.4813 49.4262Z" fill="#FF7096"/>
<path d="M24.9114 16.4233C25.008 16.8656 24.962 17.3285 24.7791 17.7537C24.5963 18.1789 24.2848 18.5472 23.8842 18.812C23.4835 19.0768 23.0117 19.2262 22.5282 19.2414C22.0448 19.2566 21.5716 19.1368 21.1684 18.8973C20.7651 18.6577 20.45 18.3091 20.2629 17.8956C20.0757 17.482 20.025 17.0221 20.117 16.5739C20.2091 16.1258 20.4398 15.7095 20.7799 15.3778C21.1201 15.0461 21.5545 14.8139 22.0282 14.7104C22.6633 14.5717 23.324 14.6742 23.8647 14.9955C24.4054 15.3167 24.7819 15.8303 24.9114 16.4233ZM10.5419 19.5616C10.4454 19.1194 10.2105 18.7178 9.86702 18.4075C9.52355 18.0973 9.08693 17.8924 8.61235 17.8188C8.13778 17.7451 7.64657 17.806 7.20085 17.9937C6.75512 18.1815 6.3749 18.4876 6.10826 18.8735C5.84162 19.2593 5.70054 19.7076 5.70286 20.1615C5.70518 20.6154 5.85079 21.0546 6.12129 21.4236C6.39179 21.7926 6.77502 22.0747 7.22252 22.2344C7.67002 22.3941 8.16169 22.4241 8.63536 22.3207C9.27053 22.1819 9.82824 21.8133 10.1858 21.2959C10.5433 20.7785 10.6715 20.1546 10.5419 19.5616ZM11.9038 17.5909C12.3775 17.4875 12.8118 17.2552 13.152 16.9235C13.4922 16.5918 13.7229 16.1755 13.8149 15.7274C13.907 15.2792 13.8562 14.8193 13.6691 14.4057C13.4819 13.9922 13.1668 13.6436 12.7636 13.404C12.3604 13.1645 11.8871 13.0447 11.4037 13.0599C10.9203 13.0751 10.4484 13.2245 10.0478 13.4893C9.64713 13.7541 9.33569 14.1224 9.15284 14.5476C8.96999 14.9728 8.92394 15.4358 9.02053 15.878C9.15004 16.471 9.52657 16.9846 10.0673 17.3059C10.608 17.6271 11.2686 17.7296 11.9038 17.5909ZM18.0621 16.2459C18.5358 16.1425 18.9702 15.9102 19.3104 15.5785C19.6506 15.2468 19.8813 14.8305 19.9733 14.3824C20.0653 13.9342 20.0146 13.4743 19.8274 13.0607C19.6403 12.6472 19.3252 12.2986 18.922 12.059C18.5187 11.8195 18.0455 11.6997 17.5621 11.7149C17.0787 11.7301 16.6068 11.8795 16.2061 12.1443C15.8055 12.4092 15.494 12.7774 15.3112 13.2026C15.1283 13.6278 15.0823 14.0908 15.1789 14.533C15.3084 15.126 15.6849 15.6396 16.2256 15.9609C16.7664 16.2821 17.427 16.3846 18.0621 16.2459ZM21.1011 20.6741C20.7144 20.5709 20.3554 20.3966 20.0445 20.161C19.7337 19.9254 19.4771 19.6332 19.2895 19.301C18.9024 18.6202 18.2869 18.0822 17.5355 17.7679C16.7841 17.4535 15.9374 17.3798 15.1226 17.5577C14.3078 17.7357 13.5689 18.1557 13.017 18.7547C12.465 19.3537 12.1299 20.0994 12.0619 20.8795C11.9987 21.6441 11.6158 22.3626 10.9973 22.8774C10.4018 23.3617 9.98963 24.0141 9.82584 24.7314C9.66206 25.4488 9.75605 26.1901 10.0929 26.8382C10.4298 27.4863 10.9904 28.0042 11.686 28.3098C12.3816 28.6155 13.1725 28.6916 13.9336 28.526C14.3899 28.4277 14.8229 28.244 15.2065 27.9862C16.4325 27.1784 17.9352 26.8502 19.3864 27.0733C20.2691 27.2254 21.1901 27.0488 21.9562 26.5804C22.7223 26.112 23.2741 25.3882 23.4958 24.5608C23.7176 23.7334 23.5921 22.8666 23.1457 22.1421C22.6993 21.4177 21.9664 20.8911 21.1011 20.6741Z" fill="#FF7096"/>
<path d="M54.3947 13.8237C54.2959 14.2655 54.0591 14.6659 53.7141 14.9745C53.3691 15.283 52.9315 15.4858 52.4566 15.5571C51.9817 15.6285 51.4908 15.5652 51.046 15.3753C50.6012 15.1853 50.2224 14.8773 49.9577 14.4902C49.6929 14.103 49.554 13.6541 49.5586 13.2002C49.5631 12.7463 49.7109 12.3078 49.9832 11.9402C50.2555 11.5725 50.6401 11.2922 51.0884 11.1347C51.5366 10.9772 52.0284 10.9496 52.5016 11.0554C53.1361 11.1972 53.692 11.5686 54.047 12.0877C54.402 12.6069 54.5271 13.2313 54.3947 13.8237ZM40.0407 10.6152C40.1394 10.1734 40.0957 9.71025 39.9149 9.28419C39.7341 8.85812 39.4245 8.48832 39.0251 8.22156C38.6258 7.95479 38.1546 7.80304 37.6713 7.78549C37.188 7.76794 36.7142 7.88539 36.3098 8.12297C35.9054 8.36055 35.5886 8.7076 35.3994 9.12023C35.2102 9.53287 35.1572 9.99255 35.2471 10.4412C35.3369 10.8898 35.5656 11.3071 35.9041 11.6405C36.2427 11.9739 36.6759 12.2082 37.1491 12.314C37.7836 12.4558 38.4447 12.3565 38.987 12.0379C39.5292 11.7194 39.9083 11.2076 40.0407 10.6152ZM42.1061 9.40177C42.5793 9.50753 43.0711 9.47993 43.5194 9.32244C43.9676 9.16495 44.3522 8.88466 44.6245 8.51701C44.8968 8.14935 45.0446 7.71085 45.0491 7.25695C45.0537 6.80305 44.9148 6.35414 44.65 5.96698C44.3853 5.57983 44.0066 5.27182 43.5618 5.08191C43.117 4.89199 42.6261 4.82871 42.1511 4.90004C41.6762 4.97138 41.2386 5.17415 40.8936 5.4827C40.5486 5.79124 40.3118 6.19171 40.213 6.63347C40.0806 7.22584 40.2057 7.8503 40.5607 8.36945C40.9157 8.88861 41.4716 9.25995 42.1061 9.40177ZM48.2578 10.7768C48.731 10.8826 49.2228 10.855 49.6711 10.6975C50.1193 10.54 50.5039 10.2597 50.7762 9.89207C51.0485 9.52442 51.1963 9.08592 51.2008 8.63202C51.2054 8.17812 51.0665 7.72921 50.8017 7.34205C50.537 6.9549 50.1583 6.64689 49.7135 6.45698C49.2687 6.26706 48.7778 6.20377 48.3028 6.27511C47.8279 6.34645 47.3903 6.54922 47.0453 6.85776C46.7003 7.16631 46.4635 7.56678 46.3647 8.00854C46.2323 8.60091 46.3574 9.22537 46.7124 9.74452C47.0674 10.2637 47.6233 10.635 48.2578 10.7768ZM49.148 16.0732C48.8408 15.8167 48.5887 15.5074 48.406 15.1627C48.2234 14.8181 48.1138 14.4449 48.0836 14.0647C48.0194 13.2842 47.688 12.5369 47.139 11.9352C46.59 11.3335 45.8532 10.9099 45.0392 10.7279C44.2253 10.546 43.3782 10.6156 42.6253 10.9263C41.8723 11.237 41.2543 11.772 40.8639 12.4509C40.4843 13.1176 39.8344 13.6079 39.0565 13.8141C38.3125 14.0024 37.6638 14.4204 37.213 15.002C36.7622 15.5835 36.535 16.2954 36.5675 17.0251C36.5999 17.7548 36.8901 18.4607 37.3921 19.031C37.8942 19.6013 38.5794 20.0035 39.3394 20.1741C39.7946 20.2771 40.2647 20.293 40.7212 20.2208C42.1735 20.0048 43.6746 20.3403 44.8967 21.1541C45.6331 21.664 46.5428 21.8919 47.4349 21.7899C48.327 21.6879 49.1324 21.264 49.6821 20.6071C50.2319 19.9502 50.4833 19.1112 50.3837 18.2661C50.2841 17.421 49.8414 16.6346 49.148 16.0732Z" fill="#FF7096"/>
</svg>`;

export function Main({ navigation }) {
  const [modalVisible, setModalVisible] = useState(false);
  const [modalAnimation] = useState(new Animated.Value(-300));

  const toggleModal = () => {
    if (modalVisible) {
      Animated.timing(modalAnimation, {
        toValue: -300,
        duration: 300,
        useNativeDriver: true,
        easing: Easing.ease,
      }).start(() => setModalVisible(false));
    } else {
      setModalVisible(true);
      Animated.timing(modalAnimation, {
        toValue: 0,
        duration: 300,
        useNativeDriver: true,
      }).start();
    }
  };

  const handleLogout = () => {
    Alert.alert(
      '로그아웃',
      '로그아웃을 하시겠습니까?',
      [
        { text: '취소', style: 'cancel' },
        {
          text: '확인',
          onPress: () => {
            auth.signOut()
              .then(() => navigation.navigate('Login')) // 로그아웃 후 로그인 화면으로 이동
              .catch((error) => console.error('로그아웃 오류:', error));
          },
        },
      ],
      { cancelable: false }
    );
  };

  const handleNavigate = () => {
    toggleModal();
    const userId = auth.currentUser?.uid; // 유저 ID 가져오기
    if (userId) {
      navigation.navigate('Information3', { userId }); // userId를 함께 전달
    } else {
      Alert.alert('사용자 정보를 찾을 수 없습니다.'); // 유저 ID가 없을 경우 경고
    }
  };
  const IconText = ({ text, iconXml, style }) => (
    <View style={styles.iconTextContainer}>
      {iconXml && <SvgXml xml={iconXml} width="60" height="60" style={styles.icon1} />}
      <Text style={style}>{text}</Text>
    </View>
  );

  return (
    <View style={styles.root}>
      <TouchableOpacity style={styles.openButton} onPress={toggleModal}>
      <SvgXml xml={svgString3} width="36" height="36" style={styles.icon2}/>
      </TouchableOpacity>
      <Modal
        visible={modalVisible}
        transparent={true}
        animationType="none"
        onRequestClose={toggleModal}
      >
        <TouchableWithoutFeedback onPress={toggleModal}>
          <View style={styles.modalContainer}>
            <View style={styles.modalBackground} />
            <Animated.View style={[styles.modalContent, { transform: [{ translateX: modalAnimation }] }]}>
              <TouchableWithoutFeedback>
                <View style={styles.modalInner}>
                  <View style={styles.topSeparator} />
                  <View style={styles.headerContainer}>
                    <View style={styles.circle} />
                    <View style={styles.profileTextContainer}>
                      <TouchableOpacity onPress={handleNavigate} style={styles.editButton}>
                        <Text style={styles.profileText}>정보 수정</Text>
                      </TouchableOpacity>
                    </View>
                  </View>
                  <Text style={styles.nameText}>이름</Text>
                  <View style={styles.bottomContainer}>
                    <View style={styles.separator1} />
                    <View style={styles.logoutContainer}>
                      <TouchableOpacity onPress={handleLogout}>
                        <Text style={styles.logoutText}>로그 아웃</Text>
                      </TouchableOpacity>
                      <Text style={styles.petTrackerText}>Pet Tracker</Text>
                    </View>
                  </View>
                </View>
              </TouchableWithoutFeedback>
            </Animated.View>
          </View>
        </TouchableWithoutFeedback>
      </Modal>
      <View style={styles.header}>
        <Text style={styles.petTracker}>Pet Tracker</Text>
        <Text style={styles.text}>강아지, 고양이 이미지</Text>
      </View>
      <View style={styles.content}>
        <View style={styles.row}>    
          <TouchableOpacity onPress={() => navigation.navigate("Adopt")}>
            <IconText text="입양" iconXml={svgString4} style={styles.subText} />
         </TouchableOpacity>
          <TouchableOpacity onPress={() => navigation.navigate("Store")}>
            <IconText text="펫 마켓" iconXml={svgString5} style={styles.subText} />
          </TouchableOpacity>
        </View>
        <View style={[styles.row, styles.rowMargin]}>
        <TouchableOpacity>
          <IconText text="증상검사" iconXml={svgString7} style={styles.featureText} />
        </TouchableOpacity>
        <TouchableOpacity onPress={() => navigation.navigate("WalkPage")}>
         <IconText text="산책" iconXml={svgString8} style={styles.featureText} />
        </TouchableOpacity>
        </View>
      </View>
      <View style={styles.footer}>
        <View style={styles.navItem}>
          <SvgXml xml={svgString} width="36" height="36" style={styles.icon}/>
          <Text style={styles.navText}>홈</Text>
        </View>
        <View style={styles.navItem}>
        <TouchableOpacity onPress={() => navigation.navigate("MapComponent")}>
          <SvgXml xml={svgString1} width="36" height="36" style={styles.icon}/>
          <Text style={styles.navText}>지도</Text>
          </TouchableOpacity>
        </View>
        <View style={styles.navItem}>
        <TouchableOpacity onPress={() => navigation.navigate("Community")}>
          <SvgXml xml={svgString2} width="36" height="36" style={styles.icon}/>
          <Text style={styles.navText}>게시판</Text>
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  root: {
    flex: 1,
    backgroundColor: 'rgba(255, 255, 255, 1)',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  icon2: {
    position: 'absolute',
    marginTop: 15,
  },
  icon: {
    alignItems: 'center',
    marginBottom: 8,
    left: 20,
  },
  featureText: {
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.7)',
    paddingTop: 10,
  },
  subText: {
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.7)',
    paddingTop: 10,
  },
  openButton: {
    position: 'absolute',
    top: 20,
    left: 10,
    padding: 10,
    backgroundColor: '#ffffff',
    borderRadius: 10,
  },
  openButtonText: {
    color: 'black',
  },
  modalContainer: {
    flex: 1,
    justifyContent: 'flex-end', // 모달을 아래쪽에 위치
  },
  modalBackground: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)', // 반투명 배경
  },
  modalContent: {
    height: '100%',
    width: '70%',
    backgroundColor: '#ffffff',
    padding: 20,
    alignItems: 'flex-start',
    justifyContent: 'flex-start', // 위쪽에서부터 쌓이도록 변경
    flex: 1, // flex 속성 추가
  },
  modalInner: {
    flex: 1, // 모달 내부를 전체 차지하도록 설정
  },
  topSeparator: {
    height: 1, // 상단 선의 두께
    width:  210, // 상단 선의 길이
    backgroundColor: 'rgba(0, 0, 0, 0.2)', // 상단 선의 색상 (희미하게)
    marginBottom: 20, // 상단 선과 내용 간의 간격
    top: 130,
  },
  headerContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
    position: 'absolute', // 좌측 상단 끝에 붙이기 위해 position 절대값으로 설정
    top: 10, // 상단에서 떨어진 거리
    left: 20, // 좌측에서 떨어진 거리
  },
  circle: {
    width: 84, // 원의 크기 증가
    height: 84, // 원의 크기 증가
    borderRadius: 50,
    backgroundColor: 'white', // 원 색상
    borderWidth: 1, // 테두리 두께 수정 (얇게)
    borderColor: 'black', // 테두리 색상 변경
    marginRight: 20, // 원과 텍스트 사이의 간격
  },
  profileTextContainer: {
    flexDirection: 'column', // 세로로 텍스트 배치
  },
  profileText: {
    fontSize: 15,
    marginVertical: 5, // 위 아래 텍스트 간의 간격
  },
  nameText: {
    fontSize: 16,
    textAlign: 'left', // 좌측 정렬
    position: 'absolute', // 좌측 상단 끝에 붙이기 위해 position 절대값으로 설정
    top: 100, // 상단에서 떨어진 거리
    left: 48,
  },
  icon: {
    top: -5,
  },
  logoutText: {
    fontSize: 16,
    textAlign: 'center', // 가운데 정렬
    marginTop: 20,
    fontWeight: 'bold',
    color: '#525252',
  },
  petTrackerText: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center', // 가운데 정렬
    marginTop: 10,
    color: '#9A9A9A',
  },
  modalText: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  bottomContainer: {
    marginTop: 'auto', // 남은 공간을 차지하여 하단으로 이동
    paddingBottom: 5, // 하단 여백
    alignItems: 'center', // 중앙 정렬
  },
  separator1: {
    height: 1, // 선의 두께
    width: 210, // 선의 길이
    backgroundColor: 'rgba(0, 0, 0, 0.2)', // 선의 색상 (희미하게)
  },
  logoutContainer: {
    alignItems: 'center', // 텍스트 중앙 정렬
  },
  closeButtonText: {
    fontSize: 16,
    color: 'blue',
    marginTop: 20,
  },
  header: {
    alignItems: 'center',
    marginTop: 70,
  },
  petTracker: {
    fontSize: 24,
    fontWeight: 'bold',
    color: 'rgba(0, 0, 0, 1)',
    top: -30,
  },
  text: {
    fontSize: 30,
    top: 50,
  },
  subText1: {
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
    top: -30,
    left: -20,
  },
  subText2: {
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
    top: -30,
  },
  subText3: {
    fontSize: 20,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
    top: -30,
  },
  content: {
    alignItems: 'center',
    marginVertical: 50,
  },
  row: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    width: '90%',
    right: 20,
  },
  rowMargin: {
    marginTop: 20,
    marginRight: 10,
  },
  featureText1: {
    fontSize: 18,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
    left: -20,
  },
  featureText2: {
    fontSize: 18,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
  },
  eventText: {
    fontSize: 16,
    color: 'rgba(0, 0, 0, 0.7)',
    marginVertical: 10,
    marginTop: 20,
  },
  footer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    padding: 10,
    borderTopWidth: 1,
    borderTopColor: 'rgba(0, 0, 0, 0.1)',
    width: '100%',
  },
  navItem: {
    flex: 1,
    alignItems: 'center',
    paddingVertical: 10,
  },
  navText: {
    fontSize: 18,
    color: 'rgba(0, 0, 0, 0.7)',
  },
});

export default Main;