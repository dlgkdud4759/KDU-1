//동물병원 위치 표시 맵
import React, { useEffect, useState } from 'react';
import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';
import { collection, getDocs, query, where } from 'firebase/firestore';
import { db } from './firebaseConfig';

const MapComponent = () => {
  const [userLocation, setUserLocation] = useState(null);  // 사용자 위치 상태
  const [locations, setLocations] = useState([]);          // 동물병원, 반려동물샵 장소 목록
  const [selectedLocation, setSelectedLocation] = useState(null);  // 선택된 장소 정보

  // 현재 위치 가져오기
  useEffect(() => {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        setUserLocation({
          lat: position.coords.latitude,
          lng: position.coords.longitude
        });
      },
      (error) => {
        console.error("위치를 가져오지 못했습니다:", error);
      }
    );
  }, []);

  // Firebase에서 동물병원과 반려동물샵 데이터 가져오기
  const fetchLocations = async () => {
    if (!userLocation) return;

    const locationQuery = query(
      collection(db, "Location"),
      where("type", "in", ["veterinary", "pet shop"])
    );

    const querySnapshot = await getDocs(locationQuery);
    const allLocations = querySnapshot.docs.map((doc) => ({
      id: doc.id,
      ...doc.data(),
    }));

    setLocations(allLocations);
  };

  useEffect(() => {
    if (userLocation) {
      fetchLocations();
    }
  }, [userLocation]);

  return (
    <LoadScript googleMapsApiKey="AIzaSyBmEc49IeyLagI1kDY394O1C7FWpAxpLAY">
      <GoogleMap
        center={userLocation || { lat: 37.5665, lng: 126.9780 }}  // 기본 서울로 설정
        zoom={14}
        mapContainerStyle={{ height: "100vh", width: "100%" }}
      >
        {/* 동물병원, 반려동물샵 마커 표시 */}
        {locations.map((location) => (
          <Marker
            key={location.id}
            position={location.coordinates}
            onClick={() => setSelectedLocation(location)}
          />
        ))}

        {/* 장소 정보 표시 (마커 클릭 시) */}
        {selectedLocation && (
          <InfoWindow
            position={selectedLocation.coordinates}
            onCloseClick={() => setSelectedLocation(null)}
          >
            <div>
              <h3>{selectedLocation.name}</h3>
              <p>{selectedLocation.address}</p>
              <p>{selectedLocation.phone}</p>
              <p>Rating: {selectedLocation.rating}</p>
              <h4>Reviews:</h4>
              <ul>
                {selectedLocation.reviews && selectedLocation.reviews.map((review, index) => (
                  <li key={index}>{review}</li>
                ))}
              </ul>
            </div>
          </InfoWindow>
        )}
      </GoogleMap>
    </LoadScript>
  );
};

export default MapComponent;
